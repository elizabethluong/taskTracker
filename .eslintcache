[{"/Users/elizabeth.luong/PersonalCode/taskTracker/React-redux/src/Component/App/App.tsx":"1","/Users/elizabeth.luong/PersonalCode/taskTracker/React-redux/src/index.tsx":"2","/Users/elizabeth.luong/PersonalCode/taskTracker/React-redux/src/Component/recorder/Recorder.tsx":"3","/Users/elizabeth.luong/PersonalCode/taskTracker/React-redux/src/redux/store.ts":"4","/Users/elizabeth.luong/PersonalCode/taskTracker/React-redux/src/redux/recorder.ts":"5","/Users/elizabeth.luong/PersonalCode/taskTracker/React-redux/src/Component/Calender/Calendar.tsx":"6","/Users/elizabeth.luong/PersonalCode/taskTracker/React-redux/src/redux/user-events.ts":"7","/Users/elizabeth.luong/PersonalCode/taskTracker/React-redux/src/lib/utils.ts":"8","/Users/elizabeth.luong/PersonalCode/taskTracker/React-redux/src/Component/Calender/EventItem.tsx":"9"},{"size":267,"mtime":1611919441276,"results":"10","hashOfConfig":"11"},{"size":333,"mtime":1611857727929,"results":"12","hashOfConfig":"11"},{"size":1607,"mtime":1611931900076,"results":"13","hashOfConfig":"11"},{"size":438,"mtime":1611920164065,"results":"14","hashOfConfig":"11"},{"size":987,"mtime":1611915936155,"results":"15","hashOfConfig":"11"},{"size":2733,"mtime":1611933959667,"results":"16","hashOfConfig":"11"},{"size":4906,"mtime":1611933526918,"results":"17","hashOfConfig":"11"},{"size":75,"mtime":1611924451561,"results":"18","hashOfConfig":"11"},{"size":779,"mtime":1611933844012,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xnppn2",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/elizabeth.luong/PersonalCode/taskTracker/React-redux/src/Component/App/App.tsx",[],"/Users/elizabeth.luong/PersonalCode/taskTracker/React-redux/src/index.tsx",[],"/Users/elizabeth.luong/PersonalCode/taskTracker/React-redux/src/Component/recorder/Recorder.tsx",["39"],"/Users/elizabeth.luong/PersonalCode/taskTracker/React-redux/src/redux/store.ts",[],"/Users/elizabeth.luong/PersonalCode/taskTracker/React-redux/src/redux/recorder.ts",[],"/Users/elizabeth.luong/PersonalCode/taskTracker/React-redux/src/Component/Calender/Calendar.tsx",["40"],"/Users/elizabeth.luong/PersonalCode/taskTracker/React-redux/src/redux/user-events.ts",["41"],"import { Action, AnyAction } from \"redux\";\nimport { ThunkAction } from \"redux-thunk\";\nimport { selectDateStart } from \"./recorder\";\nimport { RootState } from \"./store\";\n\nexport interface UserEvent {\n  id: number;\n  title: string;\n  dateStart: string;\n  dateEnd: string;\n}\n\ninterface UserEventsState {\n  byIds: Record<UserEvent[\"id\"], UserEvent>;\n  allIds: UserEvent[\"id\"][];\n}\n\nconst selectUserEventsState = (rootState: RootState) => rootState.userEvents;\n\nexport const selectUserEventsArray = (rootState: RootState) => {\n  const state = selectUserEventsState(rootState);\n  return state.allIds.map((id) => state.byIds[id]);\n};\n\nconst initialState: UserEventsState = {\n  byIds: {},\n  allIds: [],\n};\n\nconst LOAD_REQUEST = \"userEvents/load_request\";\ninterface LoadRequestAction extends Action<typeof LOAD_REQUEST> {}\n\nconst LOAD_SUCCESS = \"userEvents/load_success\";\ninterface LoadSuccessAction extends Action<typeof LOAD_SUCCESS> {\n  payload: {\n    events: UserEvent[];\n  };\n}\nconst LOAD_FAILURE = \"userEvents/load_failure\";\ninterface LoadFailureAction extends Action<typeof LOAD_FAILURE> {\n  error: string;\n}\n\nexport const loadUserEvents = (): ThunkAction<\n  void,\n  RootState,\n  undefined,\n  LoadRequestAction | LoadSuccessAction | LoadFailureAction\n> => async (dispatch, getState) => {\n  dispatch({\n    type: LOAD_REQUEST,\n  });\n  try {\n    const response = await fetch(\"http://localhost:3001/events\");\n    const events: UserEvent[] = await response.json();\n    dispatch({\n      type: LOAD_SUCCESS,\n      payload: { events },\n    });\n  } catch (e) {\n    dispatch({\n      type: LOAD_FAILURE,\n      error: \"Failure to load events.\",\n    });\n  }\n};\n\nconst CREATE_REQUEST = \"userEvents/create_request\";\ninterface CreateRequestAction extends Action<typeof CREATE_REQUEST> {}\n\nconst CREATE_SUCCESS = \"userEvents/create_success\";\ninterface CreateSuccessAction extends Action<typeof CREATE_SUCCESS> {\n  payload: {\n    event: UserEvent;\n  };\n}\n\nconst CREATE_FAILURE = \"userEvents/create_failure\";\ninterface CreateFailureAction extends Action<typeof CREATE_FAILURE> {}\n\nexport const createUserEvent = (): ThunkAction<\n  Promise<void>,\n  RootState,\n  undefined,\n  CreateRequestAction | CreateSuccessAction | CreateFailureAction\n> => async (dispatch, getState) => {\n  dispatch({ type: CREATE_REQUEST });\n\n  try {\n    const dateStart = selectDateStart(getState());\n    const event: Omit<UserEvent, \"id\"> = {\n      title: \"No name\",\n      dateStart,\n      dateEnd: new Date().toISOString(),\n    };\n    const response = await fetch(\"http://localhost:3001/events\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(event),\n    });\n    const createdEvent: UserEvent = await response.json();\n\n    dispatch({\n      type: CREATE_SUCCESS,\n      payload: { event: createdEvent },\n    });\n  } catch (e) {\n    dispatch({\n      type: CREATE_FAILURE,\n    });\n  }\n};\n\nconst DELETE_REQUEST = \"userEvents/delete_request\";\ninterface DeleteRequestAction extends Action<typeof DELETE_REQUEST> {}\n\nconst DELETE_SUCCESS = \"userEvents/delete_success\";\ninterface DeleteSuccessAction extends Action<typeof DELETE_SUCCESS> {\n  payload: { id: UserEvent[\"id\"] };\n}\n\nconst DELETE_FAILURE = \"userEvents/delete_failure\";\ninterface DeleteFailureAction extends Action<typeof DELETE_FAILURE> {}\n\nexport const deleteUserEvent = (\n  id: UserEvent[\"id\"]\n): ThunkAction<\n  Promise<void>,\n  RootState,\n  undefined,\n  DeleteRequestAction | DeleteSuccessAction | DeleteFailureAction\n> => async (dispatch, getState) => {\n  dispatch({ type: DELETE_REQUEST });\n\n  try {\n    const response = await fetch(`http://localhost:3001/events/${id}`, {\n      method: \"DELETE\",\n    });\n\n    if (response.ok) {\n      dispatch({\n        type: DELETE_SUCCESS,\n        payload: { id },\n      });\n    }\n  } catch (e) {\n    dispatch({\n      type: DELETE_FAILURE,\n    });\n  }\n};\n\nconst userEventsReducer = (\n  state: UserEventsState = initialState,\n  action: LoadSuccessAction | CreateSuccessAction | DeleteSuccessAction\n) => {\n  switch (action.type) {\n    case LOAD_SUCCESS:\n      const { events } = action.payload;\n      return {\n        ...state,\n        allIds: events.map(({ id }) => id),\n        byIds: events.reduce<UserEventsState[\"byIds\"]>((byIds, event) => {\n          byIds[event.id] = event;\n          return byIds;\n        }, {}),\n      };\n    case CREATE_SUCCESS:\n      const { event } = action.payload;\n      return {\n        ...state,\n        allIds: [...state.allIds, event.id],\n        byIds: { ...state.byIds, [event.id]: event },\n      };\n    case DELETE_SUCCESS:\n      const { id } = action.payload;\n      const newState = {\n        ...state,\n        byIds: { ...state.byIds },\n        allIds: state.allIds.filter((storedId) => storedId !== id),\n      };\n\n      delete newState.byIds[id];\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nexport default userEventsReducer;\n","/Users/elizabeth.luong/PersonalCode/taskTracker/React-redux/src/lib/utils.ts",[],"/Users/elizabeth.luong/PersonalCode/taskTracker/React-redux/src/Component/Calender/EventItem.tsx",[],{"ruleId":"42","severity":1,"message":"43","line":12,"column":29,"nodeType":"44","messageId":"45","endLine":12,"endColumn":31},{"ruleId":"46","severity":1,"message":"47","line":62,"column":6,"nodeType":"48","endLine":62,"endColumn":8,"suggestions":"49"},{"ruleId":"50","severity":1,"message":"51","line":1,"column":18,"nodeType":"52","messageId":"53","endLine":1,"endColumn":27},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadUserEvents'. Either include it or remove the dependency array. If 'loadUserEvents' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["54"],"@typescript-eslint/no-unused-vars","'AnyAction' is defined but never used.","Identifier","unusedVar",{"desc":"55","fix":"56"},"Update the dependencies array to be: [loadUserEvents]",{"range":"57","text":"58"},[1544,1546],"[loadUserEvents]"]